package ch.hackzurich.wifitracker;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.drawable.BitmapDrawable;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.net.wifi.WifiManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import ch.hackzurich.wifitracker.models.Capture;
import ch.hackzurich.wifitracker.models.Compass;
import ch.hackzurich.wifitracker.models.Position;
import ch.hackzurich.wifitracker.services.CaptureService;
import ch.hackzurich.wifitracker.services.WebService;

/**
 * Created by Florian on 04.10.2015.
 */
public class AutomaticLocationScanningActivity extends AppCompatActivity implements SensorEventListener {

    protected ImageView mRoomMapImageView;
    protected CaptureService mCaptureService;
    protected WebService mWebService;
    protected Bitmap mRoomMap;
    protected TextView mConsole;
    protected List<Capture> mCaptureList;

    private Timer mScanningTimer;
    private BroadcastReceiver mBroadCastReceiver;

    public static final int SCANNING_PERIOD = 10000;
    public static final int SCANNING_OFFSET = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_location_automatic);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        //capture service
        mCaptureService = new CaptureService(
                (WifiManager) getApplication().getSystemService(Context.WIFI_SERVICE),
                "hackzurich"
        );

        mWebService = new WebService("http://172.27.7.114:9000/capture");

        // Capture List
        mCaptureList = new ArrayList<Capture>();

        // ImageView
        mRoomMapImageView = (ImageView) findViewById(R.id.roomMapImageView);

        // Console
        mConsole = (TextView) findViewById(R.id.consoleRoomMap);

        initializeActivity();
    }

    public void initializeActivity() {
        // Capture List
        mCaptureList = new ArrayList<Capture>();

        // Empty console text
        mConsole.setText(null);

        // Default Image
        BitmapFactory.Options options = new BitmapFactory.Options();
        mRoomMap = BitmapFactory.decodeResource(getResources(), R.drawable.technopark_0, options);
        mRoomMapImageView.setImageBitmap(mRoomMap);

        // Starting Values of Image
        ImageView v = mRoomMapImageView;
    }
        public void startStopButtonClicked(View view){
            Button button = (Button) view;

            if(mScanningTimer == null){
                startAutomaticScanning();
            }
            else{
                stopAutomaticScanning();
            }
            // start/stop the
        }

        protected void startAutomaticScanning(){
            registerListener();
            startTimerJob();
        }

    protected void stopAutomaticScanning(){
        releaseListener();
        terminateTimerJob();

        mConsole.setText("Measurements:\n" + mCaptureList.get(mCaptureList.size() - 1).getLevels());
        System.out.println("Scan terminated at " + (new java.util.Date()).toString());
    }

        protected void registerListener(){
            mBroadCastReceiver = new BroadcastReceiver() {
                @Override
                public void onReceive(Context context, Intent intent) {
                    System.out.println("Results received at " + (new java.util.Date()).toString());

                    if(context instanceof AutomaticLocationScanningActivity){
                        AutomaticLocationScanningActivity thisActivity = (AutomaticLocationScanningActivity) context;
                        Capture capture = thisActivity.mCaptureService.getScanResults();
                        thisActivity.estimatePosition(capture);
                        thisActivity.mCaptureList.add(capture);
                    }
                }
            };
            IntentFilter filter = new IntentFilter();
            filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
            registerReceiver(mBroadCastReceiver, filter);
        }

    protected void releaseListener(){
        unregisterReceiver(mBroadCastReceiver);
        mBroadCastReceiver = null;
    }

        protected void startTimerJob(){
            mScanningTimer = new Timer("stepTimer", true);
            TimerTask measurementTask = new TimerTask() {
                @Override
                public void run() {
                    mCaptureService.startScan();
                    System.out.println("Scan started at " + (new java.util.Date()).toString());
                }
            };
            mScanningTimer.schedule(measurementTask, SCANNING_OFFSET, SCANNING_PERIOD);
        }

    protected void terminateTimerJob(){
        mScanningTimer.cancel();
        mScanningTimer = null;
    }

        protected void estimatePosition(Capture capture){
            //TODO deduce the x and y coordinates from the timestamp
        }


}
